import type { App, Ref } from 'vue';
import type { AppState, Auth0PluginOptions, Auth0VueClient, Auth0VueClientOptions, LogoutOptions, RedirectLoginOptions } from './interfaces';
import type { GetTokenSilentlyOptions, GetTokenSilentlyVerboseResponse, GetTokenWithPopupOptions, PopupConfigOptions, PopupLoginOptions, RedirectLoginResult } from '@auth0/auth0-spa-js';
/**
 * @ignore
 */
export declare const client: Ref<Auth0VueClient>;
/**
 * @ignore
 */
export declare class Auth0Plugin implements Auth0VueClient {
    private clientOptions;
    private pluginOptions?;
    private _client;
    private _isLoading;
    private _isAuthenticated;
    private _user;
    private _idTokenClaims;
    private _error;
    isLoading: Readonly<Ref<boolean>>;
    isAuthenticated: Readonly<Ref<boolean>>;
    user: Readonly<Ref<{
        readonly [x: string]: any;
        readonly name?: string | undefined;
        readonly given_name?: string | undefined;
        readonly family_name?: string | undefined;
        readonly middle_name?: string | undefined;
        readonly nickname?: string | undefined;
        readonly preferred_username?: string | undefined;
        readonly profile?: string | undefined;
        readonly picture?: string | undefined;
        readonly website?: string | undefined;
        readonly email?: string | undefined;
        readonly email_verified?: boolean | undefined;
        readonly gender?: string | undefined;
        readonly birthdate?: string | undefined;
        readonly zoneinfo?: string | undefined;
        readonly locale?: string | undefined;
        readonly phone_number?: string | undefined;
        readonly phone_number_verified?: boolean | undefined;
        readonly address?: string | undefined;
        readonly updated_at?: string | undefined;
        readonly sub?: string | undefined;
    } | undefined>>;
    idTokenClaims: Readonly<Ref<{
        readonly [x: string]: any;
        readonly __raw: string;
        readonly name?: string | undefined;
        readonly given_name?: string | undefined;
        readonly family_name?: string | undefined;
        readonly middle_name?: string | undefined;
        readonly nickname?: string | undefined;
        readonly preferred_username?: string | undefined;
        readonly profile?: string | undefined;
        readonly picture?: string | undefined;
        readonly website?: string | undefined;
        readonly email?: string | undefined;
        readonly email_verified?: boolean | undefined;
        readonly gender?: string | undefined;
        readonly birthdate?: string | undefined;
        readonly zoneinfo?: string | undefined;
        readonly locale?: string | undefined;
        readonly phone_number?: string | undefined;
        readonly phone_number_verified?: boolean | undefined;
        readonly address?: string | undefined;
        readonly updated_at?: string | undefined;
        readonly iss?: string | undefined;
        readonly aud?: string | undefined;
        readonly exp?: number | undefined;
        readonly nbf?: number | undefined;
        readonly iat?: number | undefined;
        readonly jti?: string | undefined;
        readonly azp?: string | undefined;
        readonly nonce?: string | undefined;
        readonly auth_time?: string | undefined;
        readonly at_hash?: string | undefined;
        readonly c_hash?: string | undefined;
        readonly acr?: string | undefined;
        readonly amr?: string | undefined;
        readonly sub_jwk?: string | undefined;
        readonly cnf?: string | undefined;
        readonly sid?: string | undefined;
        readonly org_id?: string | undefined;
    } | undefined>>;
    error: Readonly<Ref<{
        name: string;
        message: string;
        stack?: string | undefined;
    } | null>>;
    constructor(clientOptions: Auth0VueClientOptions, pluginOptions?: Auth0PluginOptions | undefined);
    install(app: App): void;
    loginWithRedirect(options?: RedirectLoginOptions<AppState>): Promise<void>;
    loginWithPopup(options?: PopupLoginOptions, config?: PopupConfigOptions): Promise<void>;
    logout(options?: LogoutOptions): Promise<void>;
    getAccessTokenSilently(options: GetTokenSilentlyOptions & {
        detailedResponse: true;
    }): Promise<GetTokenSilentlyVerboseResponse>;
    getAccessTokenSilently(options?: GetTokenSilentlyOptions): Promise<string>;
    getAccessTokenWithPopup(options?: GetTokenWithPopupOptions, config?: PopupConfigOptions): Promise<string | undefined>;
    checkSession(options?: GetTokenSilentlyOptions): Promise<void>;
    handleRedirectCallback(url?: string): Promise<RedirectLoginResult<AppState>>;
    private __checkSession;
    private __refreshState;
    private __proxy;
}
